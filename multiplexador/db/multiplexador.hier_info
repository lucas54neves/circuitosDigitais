|multiplexador
FLEX_DIGIT2_DP <= inst4.DB_MAX_OUTPUT_PORT_TYPE
GCLK => debounce:inst6.clk
FLEX_PB1 => inst9.IN0
FLEX_PB2 => inst8.IN0
FLEX_SW[0] => multiplex:inst2.sel[0]
FLEX_SW[1] => multiplex:inst2.sel[1]
FLEX_SW[2] => multiplex:inst2.sel[2]
FLEX_SW[3] => multiplex:inst2.sel[3]
FLEX_DIGIT1[0] <= digits[7].DB_MAX_OUTPUT_PORT_TYPE
FLEX_DIGIT1[1] <= digits[8].DB_MAX_OUTPUT_PORT_TYPE
FLEX_DIGIT1[2] <= digits[9].DB_MAX_OUTPUT_PORT_TYPE
FLEX_DIGIT1[3] <= digits[10].DB_MAX_OUTPUT_PORT_TYPE
FLEX_DIGIT1[4] <= digits[11].DB_MAX_OUTPUT_PORT_TYPE
FLEX_DIGIT1[5] <= digits[12].DB_MAX_OUTPUT_PORT_TYPE
FLEX_DIGIT1[6] <= digits[13].DB_MAX_OUTPUT_PORT_TYPE
FLEX_DIGIT2[0] <= digits[0].DB_MAX_OUTPUT_PORT_TYPE
FLEX_DIGIT2[1] <= digits[1].DB_MAX_OUTPUT_PORT_TYPE
FLEX_DIGIT2[2] <= digits[2].DB_MAX_OUTPUT_PORT_TYPE
FLEX_DIGIT2[3] <= digits[3].DB_MAX_OUTPUT_PORT_TYPE
FLEX_DIGIT2[4] <= digits[4].DB_MAX_OUTPUT_PORT_TYPE
FLEX_DIGIT2[5] <= digits[5].DB_MAX_OUTPUT_PORT_TYPE
FLEX_DIGIT2[6] <= digits[6].DB_MAX_OUTPUT_PORT_TYPE


|multiplexador|multiplex:inst2
data0 => lpm_mux:lpm_mux_component.data[0][0]
data1 => lpm_mux:lpm_mux_component.data[1][0]
data10 => lpm_mux:lpm_mux_component.data[10][0]
data11 => lpm_mux:lpm_mux_component.data[11][0]
data12 => lpm_mux:lpm_mux_component.data[12][0]
data13 => lpm_mux:lpm_mux_component.data[13][0]
data14 => lpm_mux:lpm_mux_component.data[14][0]
data15 => lpm_mux:lpm_mux_component.data[15][0]
data2 => lpm_mux:lpm_mux_component.data[2][0]
data3 => lpm_mux:lpm_mux_component.data[3][0]
data4 => lpm_mux:lpm_mux_component.data[4][0]
data5 => lpm_mux:lpm_mux_component.data[5][0]
data6 => lpm_mux:lpm_mux_component.data[6][0]
data7 => lpm_mux:lpm_mux_component.data[7][0]
data8 => lpm_mux:lpm_mux_component.data[8][0]
data9 => lpm_mux:lpm_mux_component.data[9][0]
sel[0] => lpm_mux:lpm_mux_component.sel[0]
sel[1] => lpm_mux:lpm_mux_component.sel[1]
sel[2] => lpm_mux:lpm_mux_component.sel[2]
sel[3] => lpm_mux:lpm_mux_component.sel[3]
result <= lpm_mux:lpm_mux_component.result[0]


|multiplexador|multiplex:inst2|lpm_mux:lpm_mux_component
data[0][0] => muxlut:$00010.data[0]
data[1][0] => muxlut:$00010.data[1]
data[2][0] => muxlut:$00010.data[2]
data[3][0] => muxlut:$00010.data[3]
data[4][0] => muxlut:$00010.data[4]
data[5][0] => muxlut:$00010.data[5]
data[6][0] => muxlut:$00010.data[6]
data[7][0] => muxlut:$00010.data[7]
data[8][0] => muxlut:$00010.data[8]
data[9][0] => muxlut:$00010.data[9]
data[10][0] => muxlut:$00010.data[10]
data[11][0] => muxlut:$00010.data[11]
data[12][0] => muxlut:$00010.data[12]
data[13][0] => muxlut:$00010.data[13]
data[14][0] => muxlut:$00010.data[14]
data[15][0] => muxlut:$00010.data[15]
sel[0] => bypassff:sel_latency_ff[0].d[0]
sel[0] => muxlut:$00010.select[0]
sel[1] => bypassff:sel_latency_ff[0].d[1]
sel[1] => muxlut:$00010.select[1]
sel[2] => bypassff:sel_latency_ff[0].d[2]
sel[3] => bypassff:sel_latency_ff[0].d[3]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= altshift:external_latency_ffs.result[0]


|multiplexador|multiplex:inst2|lpm_mux:lpm_mux_component|bypassff:sel_latency_ff[0]
d[0] => q[0].DATAIN
d[1] => q[1].DATAIN
d[2] => q[2].DATAIN
d[3] => q[3].DATAIN
clk => ~NO_FANOUT~
clrn => ~NO_FANOUT~
ena => ~NO_FANOUT~
q[0] <= d[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= d[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= d[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= d[3].DB_MAX_OUTPUT_PORT_TYPE


|multiplexador|multiplex:inst2|lpm_mux:lpm_mux_component|altshift:external_latency_ffs
data[0] => result[0].DATAIN
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE


|multiplexador|multiplex:inst2|lpm_mux:lpm_mux_component|muxlut:$00010
data[0] => muxlut:$00012.data[0]
data[1] => muxlut:$00012.data[1]
data[2] => muxlut:$00012.data[2]
data[3] => muxlut:$00012.data[3]
data[4] => muxlut:$00014.data[0]
data[5] => muxlut:$00014.data[1]
data[6] => muxlut:$00014.data[2]
data[7] => muxlut:$00014.data[3]
data[8] => muxlut:$00016.data[0]
data[9] => muxlut:$00016.data[1]
data[10] => muxlut:$00016.data[2]
data[11] => muxlut:$00016.data[3]
data[12] => muxlut:$00018.data[0]
data[13] => muxlut:$00018.data[1]
data[14] => muxlut:$00018.data[2]
data[15] => muxlut:$00018.data[3]
select[0] => muxlut:$00018.select[0]
select[0] => muxlut:$00016.select[0]
select[0] => muxlut:$00014.select[0]
select[0] => muxlut:$00012.select[0]
select[1] => muxlut:$00018.select[1]
select[1] => muxlut:$00016.select[1]
select[1] => muxlut:$00014.select[1]
select[1] => muxlut:$00012.select[1]
select[2] => muxlut:$00020.select[0]
select[3] => muxlut:$00020.select[1]
clock => clock_out.DATAIN
aclr => aclr_out.DATAIN
clken => clken_out.DATAIN
result <= result_node.DB_MAX_OUTPUT_PORT_TYPE
clock_out <= clock.DB_MAX_OUTPUT_PORT_TYPE
aclr_out <= aclr.DB_MAX_OUTPUT_PORT_TYPE
clken_out <= clken.DB_MAX_OUTPUT_PORT_TYPE


|multiplexador|multiplex:inst2|lpm_mux:lpm_mux_component|muxlut:$00010|muxlut:$00012
clock => clock_out.DATAIN
aclr => aclr_out.DATAIN
clken => clken_out.DATAIN
result <= result_node.DB_MAX_OUTPUT_PORT_TYPE
clock_out <= clock.DB_MAX_OUTPUT_PORT_TYPE
aclr_out <= aclr.DB_MAX_OUTPUT_PORT_TYPE
clken_out <= clken.DB_MAX_OUTPUT_PORT_TYPE


|multiplexador|multiplex:inst2|lpm_mux:lpm_mux_component|muxlut:$00010|muxlut:$00014
clock => clock_out.DATAIN
aclr => aclr_out.DATAIN
clken => clken_out.DATAIN
result <= result_node.DB_MAX_OUTPUT_PORT_TYPE
clock_out <= clock.DB_MAX_OUTPUT_PORT_TYPE
aclr_out <= aclr.DB_MAX_OUTPUT_PORT_TYPE
clken_out <= clken.DB_MAX_OUTPUT_PORT_TYPE


|multiplexador|multiplex:inst2|lpm_mux:lpm_mux_component|muxlut:$00010|muxlut:$00016
clock => clock_out.DATAIN
aclr => aclr_out.DATAIN
clken => clken_out.DATAIN
result <= result_node.DB_MAX_OUTPUT_PORT_TYPE
clock_out <= clock.DB_MAX_OUTPUT_PORT_TYPE
aclr_out <= aclr.DB_MAX_OUTPUT_PORT_TYPE
clken_out <= clken.DB_MAX_OUTPUT_PORT_TYPE


|multiplexador|multiplex:inst2|lpm_mux:lpm_mux_component|muxlut:$00010|muxlut:$00018
clock => clock_out.DATAIN
aclr => aclr_out.DATAIN
clken => clken_out.DATAIN
result <= result_node.DB_MAX_OUTPUT_PORT_TYPE
clock_out <= clock.DB_MAX_OUTPUT_PORT_TYPE
aclr_out <= aclr.DB_MAX_OUTPUT_PORT_TYPE
clken_out <= clken.DB_MAX_OUTPUT_PORT_TYPE


|multiplexador|multiplex:inst2|lpm_mux:lpm_mux_component|muxlut:$00010|muxlut:$00020
clock => clock_out.DATAIN
aclr => aclr_out.DATAIN
clken => clken_out.DATAIN
result <= result_node.DB_MAX_OUTPUT_PORT_TYPE
clock_out <= clock.DB_MAX_OUTPUT_PORT_TYPE
aclr_out <= aclr.DB_MAX_OUTPUT_PORT_TYPE
clken_out <= clken.DB_MAX_OUTPUT_PORT_TYPE


|multiplexador|TruthTable:inst
address[0] => lpm_rom:lpm_rom_component.address[0]
address[1] => lpm_rom:lpm_rom_component.address[1]
address[2] => lpm_rom:lpm_rom_component.address[2]
address[3] => lpm_rom:lpm_rom_component.address[3]
address[4] => lpm_rom:lpm_rom_component.address[4]
q[0] <= lpm_rom:lpm_rom_component.q[0]
q[1] <= lpm_rom:lpm_rom_component.q[1]
q[2] <= lpm_rom:lpm_rom_component.q[2]
q[3] <= lpm_rom:lpm_rom_component.q[3]
q[4] <= lpm_rom:lpm_rom_component.q[4]
q[5] <= lpm_rom:lpm_rom_component.q[5]
q[6] <= lpm_rom:lpm_rom_component.q[6]
q[7] <= lpm_rom:lpm_rom_component.q[7]
q[8] <= lpm_rom:lpm_rom_component.q[8]
q[9] <= lpm_rom:lpm_rom_component.q[9]
q[10] <= lpm_rom:lpm_rom_component.q[10]
q[11] <= lpm_rom:lpm_rom_component.q[11]
q[12] <= lpm_rom:lpm_rom_component.q[12]
q[13] <= lpm_rom:lpm_rom_component.q[13]
q[14] <= lpm_rom:lpm_rom_component.q[14]
q[15] <= lpm_rom:lpm_rom_component.q[15]


|multiplexador|TruthTable:inst|lpm_rom:lpm_rom_component
address[0] => altrom:srom.address[0]
address[1] => altrom:srom.address[1]
address[2] => altrom:srom.address[2]
address[3] => altrom:srom.address[3]
address[4] => altrom:srom.address[4]
inclock => ~NO_FANOUT~
outclock => ~NO_FANOUT~
memenab => otri[15].OE
memenab => otri[14].OE
memenab => otri[13].OE
memenab => otri[12].OE
memenab => otri[11].OE
memenab => otri[10].OE
memenab => otri[9].OE
memenab => otri[8].OE
memenab => otri[7].OE
memenab => otri[6].OE
memenab => otri[5].OE
memenab => otri[4].OE
memenab => otri[3].OE
memenab => otri[2].OE
memenab => otri[1].OE
memenab => otri[0].OE
q[0] <= otri[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= otri[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= otri[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= otri[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= otri[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= otri[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= otri[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= otri[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= otri[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= otri[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= otri[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= otri[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= otri[12].DB_MAX_OUTPUT_PORT_TYPE
q[13] <= otri[13].DB_MAX_OUTPUT_PORT_TYPE
q[14] <= otri[14].DB_MAX_OUTPUT_PORT_TYPE
q[15] <= otri[15].DB_MAX_OUTPUT_PORT_TYPE


|multiplexador|TruthTable:inst|lpm_rom:lpm_rom_component|altrom:srom
address[0] => segment[0][15].WADDR
address[0] => segment[0][15].RADDR
address[0] => segment[0][14].WADDR
address[0] => segment[0][14].RADDR
address[0] => segment[0][13].WADDR
address[0] => segment[0][13].RADDR
address[0] => segment[0][12].WADDR
address[0] => segment[0][12].RADDR
address[0] => segment[0][11].WADDR
address[0] => segment[0][11].RADDR
address[0] => segment[0][10].WADDR
address[0] => segment[0][10].RADDR
address[0] => segment[0][9].WADDR
address[0] => segment[0][9].RADDR
address[0] => segment[0][8].WADDR
address[0] => segment[0][8].RADDR
address[0] => segment[0][7].WADDR
address[0] => segment[0][7].RADDR
address[0] => segment[0][6].WADDR
address[0] => segment[0][6].RADDR
address[0] => segment[0][5].WADDR
address[0] => segment[0][5].RADDR
address[0] => segment[0][4].WADDR
address[0] => segment[0][4].RADDR
address[0] => segment[0][3].WADDR
address[0] => segment[0][3].RADDR
address[0] => segment[0][2].WADDR
address[0] => segment[0][2].RADDR
address[0] => segment[0][1].WADDR
address[0] => segment[0][1].RADDR
address[0] => segment[0][0].WADDR
address[0] => segment[0][0].RADDR
address[1] => segment[0][15].WADDR1
address[1] => segment[0][15].RADDR1
address[1] => segment[0][14].WADDR1
address[1] => segment[0][14].RADDR1
address[1] => segment[0][13].WADDR1
address[1] => segment[0][13].RADDR1
address[1] => segment[0][12].WADDR1
address[1] => segment[0][12].RADDR1
address[1] => segment[0][11].WADDR1
address[1] => segment[0][11].RADDR1
address[1] => segment[0][10].WADDR1
address[1] => segment[0][10].RADDR1
address[1] => segment[0][9].WADDR1
address[1] => segment[0][9].RADDR1
address[1] => segment[0][8].WADDR1
address[1] => segment[0][8].RADDR1
address[1] => segment[0][7].WADDR1
address[1] => segment[0][7].RADDR1
address[1] => segment[0][6].WADDR1
address[1] => segment[0][6].RADDR1
address[1] => segment[0][5].WADDR1
address[1] => segment[0][5].RADDR1
address[1] => segment[0][4].WADDR1
address[1] => segment[0][4].RADDR1
address[1] => segment[0][3].WADDR1
address[1] => segment[0][3].RADDR1
address[1] => segment[0][2].WADDR1
address[1] => segment[0][2].RADDR1
address[1] => segment[0][1].WADDR1
address[1] => segment[0][1].RADDR1
address[1] => segment[0][0].WADDR1
address[1] => segment[0][0].RADDR1
address[2] => segment[0][15].WADDR2
address[2] => segment[0][15].RADDR2
address[2] => segment[0][14].WADDR2
address[2] => segment[0][14].RADDR2
address[2] => segment[0][13].WADDR2
address[2] => segment[0][13].RADDR2
address[2] => segment[0][12].WADDR2
address[2] => segment[0][12].RADDR2
address[2] => segment[0][11].WADDR2
address[2] => segment[0][11].RADDR2
address[2] => segment[0][10].WADDR2
address[2] => segment[0][10].RADDR2
address[2] => segment[0][9].WADDR2
address[2] => segment[0][9].RADDR2
address[2] => segment[0][8].WADDR2
address[2] => segment[0][8].RADDR2
address[2] => segment[0][7].WADDR2
address[2] => segment[0][7].RADDR2
address[2] => segment[0][6].WADDR2
address[2] => segment[0][6].RADDR2
address[2] => segment[0][5].WADDR2
address[2] => segment[0][5].RADDR2
address[2] => segment[0][4].WADDR2
address[2] => segment[0][4].RADDR2
address[2] => segment[0][3].WADDR2
address[2] => segment[0][3].RADDR2
address[2] => segment[0][2].WADDR2
address[2] => segment[0][2].RADDR2
address[2] => segment[0][1].WADDR2
address[2] => segment[0][1].RADDR2
address[2] => segment[0][0].WADDR2
address[2] => segment[0][0].RADDR2
address[3] => segment[0][15].WADDR3
address[3] => segment[0][15].RADDR3
address[3] => segment[0][14].WADDR3
address[3] => segment[0][14].RADDR3
address[3] => segment[0][13].WADDR3
address[3] => segment[0][13].RADDR3
address[3] => segment[0][12].WADDR3
address[3] => segment[0][12].RADDR3
address[3] => segment[0][11].WADDR3
address[3] => segment[0][11].RADDR3
address[3] => segment[0][10].WADDR3
address[3] => segment[0][10].RADDR3
address[3] => segment[0][9].WADDR3
address[3] => segment[0][9].RADDR3
address[3] => segment[0][8].WADDR3
address[3] => segment[0][8].RADDR3
address[3] => segment[0][7].WADDR3
address[3] => segment[0][7].RADDR3
address[3] => segment[0][6].WADDR3
address[3] => segment[0][6].RADDR3
address[3] => segment[0][5].WADDR3
address[3] => segment[0][5].RADDR3
address[3] => segment[0][4].WADDR3
address[3] => segment[0][4].RADDR3
address[3] => segment[0][3].WADDR3
address[3] => segment[0][3].RADDR3
address[3] => segment[0][2].WADDR3
address[3] => segment[0][2].RADDR3
address[3] => segment[0][1].WADDR3
address[3] => segment[0][1].RADDR3
address[3] => segment[0][0].WADDR3
address[3] => segment[0][0].RADDR3
address[4] => segment[0][15].WADDR4
address[4] => segment[0][15].RADDR4
address[4] => segment[0][14].WADDR4
address[4] => segment[0][14].RADDR4
address[4] => segment[0][13].WADDR4
address[4] => segment[0][13].RADDR4
address[4] => segment[0][12].WADDR4
address[4] => segment[0][12].RADDR4
address[4] => segment[0][11].WADDR4
address[4] => segment[0][11].RADDR4
address[4] => segment[0][10].WADDR4
address[4] => segment[0][10].RADDR4
address[4] => segment[0][9].WADDR4
address[4] => segment[0][9].RADDR4
address[4] => segment[0][8].WADDR4
address[4] => segment[0][8].RADDR4
address[4] => segment[0][7].WADDR4
address[4] => segment[0][7].RADDR4
address[4] => segment[0][6].WADDR4
address[4] => segment[0][6].RADDR4
address[4] => segment[0][5].WADDR4
address[4] => segment[0][5].RADDR4
address[4] => segment[0][4].WADDR4
address[4] => segment[0][4].RADDR4
address[4] => segment[0][3].WADDR4
address[4] => segment[0][3].RADDR4
address[4] => segment[0][2].WADDR4
address[4] => segment[0][2].RADDR4
address[4] => segment[0][1].WADDR4
address[4] => segment[0][1].RADDR4
address[4] => segment[0][0].WADDR4
address[4] => segment[0][0].RADDR4
clocki => ~NO_FANOUT~
clocko => ~NO_FANOUT~
q[0] <= segment[0][0].DATAOUT
q[1] <= segment[0][1].DATAOUT
q[2] <= segment[0][2].DATAOUT
q[3] <= segment[0][3].DATAOUT
q[4] <= segment[0][4].DATAOUT
q[5] <= segment[0][5].DATAOUT
q[6] <= segment[0][6].DATAOUT
q[7] <= segment[0][7].DATAOUT
q[8] <= segment[0][8].DATAOUT
q[9] <= segment[0][9].DATAOUT
q[10] <= segment[0][10].DATAOUT
q[11] <= segment[0][11].DATAOUT
q[12] <= segment[0][12].DATAOUT
q[13] <= segment[0][13].DATAOUT
q[14] <= segment[0][14].DATAOUT
q[15] <= segment[0][15].DATAOUT


|multiplexador|counter:inst5
aclr => lpm_counter:lpm_counter_component.aclr
clock => lpm_counter:lpm_counter_component.clock
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]
q[4] <= lpm_counter:lpm_counter_component.q[4]


|multiplexador|counter:inst5|lpm_counter:lpm_counter_component
clock => alt_counter_f10ke:wysi_counter.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => alt_counter_f10ke:wysi_counter.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= alt_counter_f10ke:wysi_counter.q[0]
q[1] <= alt_counter_f10ke:wysi_counter.q[1]
q[2] <= alt_counter_f10ke:wysi_counter.q[2]
q[3] <= alt_counter_f10ke:wysi_counter.q[3]
q[4] <= alt_counter_f10ke:wysi_counter.q[4]
cout <= cout~0.DB_MAX_OUTPUT_PORT_TYPE
eq[0] <= eq[0]~15.DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= eq[1]~14.DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= eq[2]~13.DB_MAX_OUTPUT_PORT_TYPE
eq[3] <= eq[3]~12.DB_MAX_OUTPUT_PORT_TYPE
eq[4] <= eq[4]~11.DB_MAX_OUTPUT_PORT_TYPE
eq[5] <= eq[5]~10.DB_MAX_OUTPUT_PORT_TYPE
eq[6] <= eq[6]~9.DB_MAX_OUTPUT_PORT_TYPE
eq[7] <= eq[7]~8.DB_MAX_OUTPUT_PORT_TYPE
eq[8] <= eq[8]~7.DB_MAX_OUTPUT_PORT_TYPE
eq[9] <= eq[9]~6.DB_MAX_OUTPUT_PORT_TYPE
eq[10] <= eq[10]~5.DB_MAX_OUTPUT_PORT_TYPE
eq[11] <= eq[11]~4.DB_MAX_OUTPUT_PORT_TYPE
eq[12] <= eq[12]~3.DB_MAX_OUTPUT_PORT_TYPE
eq[13] <= eq[13]~2.DB_MAX_OUTPUT_PORT_TYPE
eq[14] <= eq[14]~1.DB_MAX_OUTPUT_PORT_TYPE
eq[15] <= eq[15]~0.DB_MAX_OUTPUT_PORT_TYPE


|multiplexador|counter:inst5|lpm_counter:lpm_counter_component|alt_counter_f10ke:wysi_counter
data[0] => data_path[0].IN1
data[1] => data_path[1].IN1
data[2] => data_path[2].IN1
data[3] => data_path[3].IN1
data[4] => data_path[4].IN1
clock => counter_cell[4].CLK
clock => counter_cell[3].CLK
clock => counter_cell[2].CLK
clock => counter_cell[1].CLK
clock => counter_cell[0].CLK
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
cin => ~NO_FANOUT~
sload => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aclr => counter_cell[4].ACLR
aclr => counter_cell[3].ACLR
aclr => counter_cell[2].ACLR
aclr => counter_cell[1].ACLR
aclr => counter_cell[0].ACLR
q[0] <= counter_cell[0].REGOUT
q[1] <= counter_cell[1].REGOUT
q[2] <= counter_cell[2].REGOUT
q[3] <= counter_cell[3].REGOUT
q[4] <= counter_cell[4].REGOUT
cout <= cout_bit.COMBOUT


|multiplexador|debounce:inst6
clk => flipflops[1].CLK
clk => flipflops[0].CLK
clk => counter_out[19].CLK
clk => counter_out[18].CLK
clk => counter_out[17].CLK
clk => counter_out[16].CLK
clk => counter_out[15].CLK
clk => counter_out[14].CLK
clk => counter_out[13].CLK
clk => counter_out[12].CLK
clk => counter_out[11].CLK
clk => counter_out[10].CLK
clk => counter_out[9].CLK
clk => counter_out[8].CLK
clk => counter_out[7].CLK
clk => counter_out[6].CLK
clk => counter_out[5].CLK
clk => counter_out[4].CLK
clk => counter_out[3].CLK
clk => counter_out[2].CLK
clk => counter_out[1].CLK
clk => counter_out[0].CLK
clk => result~reg0.CLK
button => flipflops[0].DATAIN
result <= result~reg0.DB_MAX_OUTPUT_PORT_TYPE


|multiplexador|decodificador:inst7
signed_int[0] => Mux12.IN36
signed_int[0] => Mux11.IN36
signed_int[0] => Mux10.IN36
signed_int[0] => Mux9.IN36
signed_int[0] => Mux8.IN36
signed_int[0] => Mux7.IN36
signed_int[0] => Mux6.IN36
signed_int[1] => Mux12.IN35
signed_int[1] => Mux11.IN35
signed_int[1] => Mux10.IN35
signed_int[1] => Mux9.IN35
signed_int[1] => Mux8.IN35
signed_int[1] => Mux7.IN35
signed_int[1] => Mux6.IN35
signed_int[1] => Mux4.IN19
signed_int[1] => Mux3.IN19
signed_int[1] => Mux2.IN19
signed_int[1] => Mux1.IN19
signed_int[1] => Mux0.IN19
signed_int[2] => Mux12.IN34
signed_int[2] => Mux11.IN34
signed_int[2] => Mux10.IN34
signed_int[2] => Mux9.IN34
signed_int[2] => Mux8.IN34
signed_int[2] => Mux7.IN34
signed_int[2] => Mux6.IN34
signed_int[2] => Mux5.IN10
signed_int[2] => Mux4.IN18
signed_int[2] => Mux3.IN18
signed_int[2] => Mux2.IN18
signed_int[2] => Mux1.IN18
signed_int[2] => Mux0.IN18
signed_int[3] => Mux12.IN33
signed_int[3] => Mux11.IN33
signed_int[3] => Mux10.IN33
signed_int[3] => Mux9.IN33
signed_int[3] => Mux8.IN33
signed_int[3] => Mux7.IN33
signed_int[3] => Mux6.IN33
signed_int[3] => Mux5.IN9
signed_int[3] => Mux4.IN17
signed_int[3] => Mux3.IN17
signed_int[3] => Mux2.IN17
signed_int[3] => Mux1.IN17
signed_int[3] => Mux0.IN17
signed_int[4] => Mux12.IN32
signed_int[4] => Mux11.IN32
signed_int[4] => Mux10.IN32
signed_int[4] => Mux9.IN32
signed_int[4] => Mux8.IN32
signed_int[4] => Mux7.IN32
signed_int[4] => Mux6.IN32
signed_int[4] => Mux5.IN8
signed_int[4] => Mux4.IN16
signed_int[4] => Mux3.IN16
signed_int[4] => Mux2.IN16
signed_int[4] => Mux1.IN16
signed_int[4] => Mux0.IN16
digits[0] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
digits[1] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
digits[2] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
digits[3] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
digits[4] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
digits[5] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
digits[6] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
digits[7] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
digits[8] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
digits[9] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
digits[10] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
digits[11] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
digits[12] <= <GND>
digits[13] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


